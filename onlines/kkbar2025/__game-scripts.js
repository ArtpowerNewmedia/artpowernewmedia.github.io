class FontService{#o;#t;#e;#n=new Map;get _fontCache(){return this.#n}#a=Promise.resolve();constructor(o){console.log("🏗️ FontService 建構函式開始"),console.log("  - app:",o),this.#o=o,this.canvasFont=null,console.log("✅ FontService 建構完成")}async createFont(o,t,e){const n=`${t}_${e}`;return this.#a=this.#a.then((async()=>{let a=this.#n.get(n);if(await this.#s(o,t,e),a){let t=!1;for(const e of o)a.chars.has(e)||(a.chars.add(e),t=!0);if(t){const o=Array.from(a.chars).join("");a.font.createTextures(o),console.log("🔄 CanvasFont 累加新字元並重建紋理:",o)}else console.log("♻️ CanvasFont 已包含所有字元，無需重建");this.canvasFont=a.font}else{console.log("🆕 建立新的 CanvasFont");const e=new pc.CanvasFont(this.#o,{fontName:t,fontSize:128});e.createTextures(o),this.#n.set(n,{font:e,chars:new Set(o)}),this.canvasFont=e,console.log("✅ CanvasFont 建立並快取")}})),this.#a}#c(o,t){console.log("📝 #writeCharacters() 開始"),console.log("  - characters:",o),console.log("  - fontName:",t),this.#t=document.createElement("p"),this.#e=document.createTextNode(o),this.#t.appendChild(this.#e),this.#t.style.fontFamily=t,this.#t.style.visibility="hidden",this.#t.style.position="absolute",document.body.appendChild(this.#t),console.log("✅ 字元元素已添加到 DOM")}#s(o,t,e){console.log("🌐 #loadGoogleFonts() 開始"),console.log("  - characters:",o),console.log("  - fontName:",t),console.log("  - attributes:",e);let n=this;return new Promise(((a,s)=>{console.log("🔄 開始 WebFont.load()"),WebFont.load({classes:!1,google:{families:[t+(e||"")],text:o},active:function(){n.#t&&n.#t.remove(),n.#e&&n.#e.remove(),setTimeout((()=>{console.log("⏰ 字體載入延遲完成"),a()}),10)},inactive:function(){n.#t&&n.#t.remove(),n.#e&&n.#e.remove(),console.error("❌ WebFont 載入失敗"),s(new Error(`Failed to load font: ${t}`))}})}))}#l(o,t){console.log("🎨 #createCanvasFont() 開始"),console.log("  - characters:",o),console.log("  - fontName:",t),this.canvasFont&&(console.log("🗑️ 銷毀舊的 canvasFont"),this.canvasFont.destroy()),console.log("🆕 創建新的 CanvasFont"),this.canvasFont=new pc.CanvasFont(this.#o,{fontName:t,fontSize:128}),console.log("📝 創建字體紋理"),this.canvasFont.createTextures(o),console.log("✅ CanvasFont 創建完成:",this.canvasFont)}clearCache(){console.log("🧹 清理字體快取"),this.#n.forEach((o=>{o.font&&o.font.destroy&&o.font.destroy()})),this.#n.clear(),console.log("✅ 快取清理完成")}}window.EventNames={QUEST_REQUEST:"quest:request",QUEST_BG_REQUEST:"questBG:request"};var DynamicFontLoader=pc.createScript("dynamicFontLoader");DynamicFontLoader.attributes.add("fontName",{type:"string",default:"Roboto"}),DynamicFontLoader.attributes.add("fontBold",{type:"string",default:""}),DynamicFontLoader.attributes.add("defaultText",{type:"string",default:""}),DynamicFontLoader.fontService=null,DynamicFontLoader.prototype.initialize=function(){console.log("🔧 DynamicFontLoader.initialize() 開始執行，實體 ID:",this.entity.getGuid()),this.textEntity=this.entity.element,console.log("📝 文字實體:",this.textEntity),console.log("📝 預設字體名稱:",this.fontName),console.log("📝 預設字體粗細:",this.fontBold),console.log("📝 預設文字:",this.defaultText),DynamicFontLoader.fontService?console.log("♻️ 重用現有的 FontService 實例"):(console.log("🆕 創建新的 FontService 實例"),DynamicFontLoader.fontService=new FontService(this.app)),this.fontService=DynamicFontLoader.fontService,console.log("🔗 FontService 已分配給實例"),this.defaultText&&""!==this.defaultText.trim()&&(console.log("📝 發現預設文字，開始載入字體..."),this.loadFontAndSetText(this.defaultText,this.fontName,this.fontBold)),console.log("🏁 DynamicFontLoader.initialize() 執行完成")},DynamicFontLoader.prototype.loadFontAndSetText=async function(t,o,e){if(console.log("🚀 loadFontAndSetText() 開始執行"),console.log("  - text:",t),console.log("  - fontName:",o||this.fontName),console.log("  - fontBold:",e||this.fontBold),!t||""===t.trim())return void console.warn("⚠️ 文字為空，跳過字體載入");const n=o||this.fontName,i=e||this.fontBold;try{console.log("🔄 開始載入字體..."),await this.fontService.createFont(t,n,":"+i),console.log("✅ 字體載入成功"),console.log("📝 設置文字內容"),this.textEntity.text=t,console.log("🎨 設置字體到文字實體"),this.textEntity.font=this.fontService.canvasFont,console.log("✅ 字體設置完成，canvasFont:",this.fontService.canvasFont),console.log("🔍 檢查字體設置結果:"),console.log("  - textEntity.font:",this.textEntity.font),console.log("  - textEntity.text:",this.textEntity.text),console.log("  - textEntity.enabled:",this.textEntity.enabled),this.textEntity.font&&(this.textEntity.fire("set","font",this.textEntity.font),console.log("🔄 文字實體已觸發更新事件")),this.entity.fire("fontLoaded",{text:t,fontName:n,fontBold:i,canvasFont:this.fontService.canvasFont}),console.log("✅ loadFontAndSetText() 執行完成")}catch(o){console.error("❌ 字體載入失敗:",o),console.error("❌ 錯誤堆疊:",o.stack),console.log("🔄 嘗試重試載入字體...");try{await new Promise((t=>setTimeout(t,1e3))),await this.fontService.createFont(t,n,":"+i),this.textEntity.text=t,this.textEntity.font=this.fontService.canvasFont,this.textEntity.fire("set","font",this.textEntity.font),console.log("✅ 重試成功")}catch(o){console.error("❌ 重試也失敗:",o),this.entity.fire("fontLoadError",{text:t,fontName:n,fontBold:i,error:o})}}},DynamicFontLoader.prototype.setText=function(t){console.log("📝 setText() 設置文字:",t),this.textEntity.text=t,this.entity.fire("textUpdated",{text:t})},DynamicFontLoader.prototype.loadFont=async function(t,o){console.log("🎨 loadFont() 開始載入字體"),console.log("  - fontName:",t||this.fontName),console.log("  - fontBold:",o||this.fontBold);const e=this.textEntity.text||"",n=t||this.fontName,i=o||this.fontBold;if(e&&""!==e.trim())try{await this.fontService.createFont(e,n,":"+i),this.textEntity.font=this.fontService.canvasFont,this.textEntity.fire("set","font",this.textEntity.font),console.log("✅ 字體載入完成")}catch(t){throw console.error("❌ 字體載入失敗:",t),t}else console.warn("⚠️ 當前沒有文字內容，無法載入字體")},DynamicFontLoader.prototype.updateFontSettings=function(t,o){console.log("⚙️ updateFontSettings() 更新字體設定"),console.log("  - 新字體名稱:",t),console.log("  - 新字體粗細:",o),this.fontName=t||this.fontName,this.fontBold=o||this.fontBold,this.textEntity.text&&""!==this.textEntity.text.trim()&&this.loadFontAndSetText(this.textEntity.text,this.fontName,this.fontBold)},DynamicFontLoader.prototype.preloadFont=async function(t,o,e){if(console.log("⏳ preloadFont() 開始預載入字體"),console.log("  - characters:",t),console.log("  - fontName:",o||this.fontName),console.log("  - fontBold:",e||this.fontBold),!t||""===t.trim())return void console.warn("⚠️ 字元為空，跳過預載入");const n=o||this.fontName,i=e||this.fontBold;try{console.log("🔄 開始預載入字體..."),await this.fontService.createFont(t,n,":"+i),console.log("✅ 字體預載入成功"),this.entity.fire("fontPreloaded",{characters:t,fontName:n,fontBold:i,canvasFont:this.fontService.canvasFont}),console.log("✅ preloadFont() 執行完成")}catch(o){console.error("❌ 字體預載入失敗:",o),console.error("❌ 錯誤堆疊:",o.stack),console.log("🔄 嘗試重試預載入字體...");try{await new Promise((t=>setTimeout(t,1e3))),await this.fontService.createFont(t,n,":"+i),console.log("✅ 重試預載入成功")}catch(o){console.error("❌ 重試預載入也失敗:",o),this.entity.fire("fontPreloadError",{characters:t,fontName:n,fontBold:i,error:o})}}},DynamicFontLoader.prototype.preloadMultipleFonts=async function(t){console.log("🔄 preloadMultipleFonts() 開始批量預載入"),console.log("  - 字體配置數量:",t.length);const o=t.map((t=>{const{characters:o,fontName:e,fontBold:n}=t;return this.preloadFont(o,e,n)}));try{await Promise.all(o),console.log("✅ 批量預載入完成"),this.entity.fire("fontsPreloaded",{count:t.length,configs:t})}catch(t){throw console.error("❌ 批量預載入失敗:",t),t}},DynamicFontLoader.prototype.preloadCommonCharacters=async function(t,o){console.log("📝 preloadCommonCharacters() 開始預載入常用字元");const e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.,!?;:'\"()-+=[]{}<>@#$%^&*_~`|\\/",n=t||this.fontName,i=o||this.fontBold;return console.log("  - 常用字元:",e),console.log("  - 字體名稱:",n),console.log("  - 字體粗細:",i),this.preloadFont(e,n,i)},DynamicFontLoader.prototype.preloadChineseCharacters=async function(t,o){console.log("🇹🇼 preloadChineseCharacters() 開始預載入中文字元");const e="你好世界歡迎使用動態字體載入器這是一個測試的中文字符串我們可以預載入常用的中文字元來減少運行時的延遲",n=t||"Noto Sans TC",i=o||"";return console.log("  - 中文字元:",e),console.log("  - 字體名稱:",n),console.log("  - 字體粗細:",i),this.preloadFont(e,n,i)},DynamicFontLoader.prototype.preloadJapaneseCharacters=async function(t,o){console.log("🇯🇵 preloadJapaneseCharacters() 開始預載入日文字元");const e="こんにちは世界動的フォントローダーへようこそこれはテストの日本語文字列ですよく使われる日本語文字を事前に読み込んで実行時の遅延を減らすことができます",n=t||"Noto Sans JP",i=o||"";return console.log("  - 日文字元:",e),console.log("  - 字體名稱:",n),console.log("  - 字體粗細:",i),this.preloadFont(e,n,i)},DynamicFontLoader.prototype.isFontPreloaded=function(t,o,e){const n=`${o||this.fontName}_${e||this.fontBold}`,i=this.fontService._fontCache?this.fontService._fontCache.get(n):null;if(!i)return!1;for(const o of t)if(!i.chars.has(o))return!1;return!0},DynamicFontLoader.prototype.update=function(t){},DynamicFontLoader.prototype.destroy=function(){console.log("🗑️ DynamicFontLoader.destroy() 開始清理"),DynamicFontLoader.fontService};var FontLoader=pc.createScript("fontLoader");FontLoader.attributes.add("fontName",{type:"string"}),FontLoader.attributes.add("fontBold",{type:"string"}),FontLoader.fontService=null,FontLoader.prototype.initialize=async function(){console.log("🔧 FontLoader.initialize() 開始執行，實體 ID:",this.entity.getGuid()),this.textEntity=this.entity.element,console.log("📝 文字實體:",this.textEntity),console.log("📝 文字內容:",this.textEntity.text),console.log("📝 字體名稱:",this.fontName),console.log("📝 字體粗細:",this.fontBold),FontLoader.fontService?console.log("♻️ 重用現有的 FontService 實例"):(console.log("🆕 創建新的 FontService 實例"),FontLoader.fontService=new FontService(this.app)),this.fontService=FontLoader.fontService,console.log("🔗 FontService 已分配給實例");let t=this.textEntity.text;console.log("📋 要載入的字元:",t);try{console.log("🚀 開始載入字體..."),await this.fontService.createFont(t,this.fontName,":"+this.fontBold),console.log("✅ 字體載入成功"),console.log("🎨 設置字體到文字實體"),this.textEntity.font=this.fontService.canvasFont,console.log("✅ 字體設置完成，canvasFont:",this.fontService.canvasFont),console.log("🔍 檢查字體設置結果:"),console.log("  - textEntity.font:",this.textEntity.font),console.log("  - textEntity.text:",this.textEntity.text),console.log("  - textEntity.enabled:",this.textEntity.enabled),this.textEntity.font&&(this.textEntity.fire("set","font",this.textEntity.font),console.log("🔄 文字實體已觸發更新事件"))}catch(o){console.error("❌ Font loading failed for entity:",this.entity.getGuid(),o),console.error("❌ 錯誤堆疊:",o.stack),console.log("🔄 嘗試重試載入字體...");try{await new Promise((t=>setTimeout(t,1e3))),await this.fontService.createFont(t,this.fontName,":"+this.fontBold),this.textEntity.font=this.fontService.canvasFont,this.textEntity.fire("set","font",this.textEntity.font),console.log("✅ 重試成功")}catch(t){console.error("❌ 重試也失敗:",t)}}console.log("🏁 FontLoader.initialize() 執行完成")},FontLoader.prototype.update=function(t){},FontLoader.prototype.destroy=function(){FontLoader.fontService};var SceneManager=pc.createScript("sceneManager");SceneManager.attributes.add("pageHome",{type:"entity"}),SceneManager.attributes.add("pageQuest",{type:"entity"}),SceneManager.attributes.add("pageResult",{type:"entity"}),SceneManager.attributes.add("pageTicket",{type:"entity"}),SceneManager.attributes.add("pageCheckout",{type:"entity"}),SceneManager.attributes.add("pageFinal",{type:"entity"}),SceneManager.attributes.add("btn_Home_Next",{type:"entity"}),SceneManager.attributes.add("btn_Result_Next",{type:"entity"}),SceneManager.attributes.add("btn_Ticket_Next",{type:"entity"}),SceneManager.attributes.add("btn_Ticket_Exchange",{type:"entity"}),SceneManager.prototype.initialize=function(){SceneManager.instance=this,this.pageHome.enabled=!0,this.pageQuest.enabled=!1,this.pageResult.enabled=!1,this.pageTicket.enabled=!1,this.pageCheckout.enabled=!1,this.currentStage=0,this.btn_Home_Next.button.on("click",(function(e){SceneManager.instance.showPage(1),QuestUi.instance.showStage(0)})),this.btn_Result_Next.button.on("click",(e=>{setTimeout((()=>{SceneManager.instance.showPage(3)}),200)})),this.btn_Ticket_Next.button.on("click",(e=>{setTimeout((()=>{SceneManager.instance.showPage(4)}),200)})),this.btn_Ticket_Exchange.button.on("click",(e=>{setTimeout((()=>{SceneManager.instance.showPage(5)}),200)}))},SceneManager.prototype.showPage=function(e){console.log("to pgage "+e),this.pageHome.enabled=0==e,this.pageQuest.enabled=1==e,this.pageResult.enabled=2==e,this.pageTicket.enabled=3==e,this.pageCheckout.enabled=4==e,this.pageFinal.enabled=5==e},SceneManager.prototype.update=function(e){};var QuestManager=pc.createScript("questManager");QuestManager.attributes.add("preloadFontLoader",{type:"entity"}),QuestManager.attributes.add("questBG",{type:"asset",array:!0,assetType:"texture"}),QuestManager.attributes.add("quests",{type:"json",array:!0,schema:[{name:"q",type:"string"},{name:"a0",type:"string"},{name:"a1",type:"string"},{name:"a2",type:"string"},{name:"ans",type:"number"}]}),QuestManager.prototype.initialize=function(){this.app.on(EventNames.QUEST_BG_REQUEST,(function(t,e){var a=this.questBG[t];e&&e(a)}),this),this.app.on(EventNames.QUEST_REQUEST,(function(t,e){var a=this.quests[t];e&&e(a)}),this);let t="";this.quests&&this.quests.length>0&&this.quests.forEach((e=>{e.q&&(t+=e.q),e.a0&&(t+=e.a0),e.a1&&(t+=e.a1),e.a2&&(t+=e.a2)}));const e=[...new Set(t)].join("");console.log("📝 收集到的所有字元:",t),console.log("🔤 去重後的字元:",e),setTimeout((()=>{this.preloadFontLoader.script.dynamicFontLoader.loadFontAndSetText(e)}),100)},QuestManager.prototype.update=function(t){};var QuestUi=pc.createScript("questUi");QuestUi.attributes.add("background",{type:"entity"}),QuestUi.attributes.add("foregroundYes",{type:"entity"}),QuestUi.attributes.add("foregroundNo",{type:"entity"}),QuestUi.attributes.add("questText",{type:"entity"}),QuestUi.attributes.add("checkBox",{type:"entity",array:!0}),QuestUi.attributes.add("checkBoxOn",{type:"entity",array:!0}),QuestUi.attributes.add("questAns",{type:"entity",array:!0}),QuestUi.attributes.add("questOK",{type:"entity"}),QuestUi.attributes.add("testBG",{type:"asset",assetType:"texture"}),QuestUi.prototype.initialize=function(){QuestUi.instance=this,this.questData=null,this.selectedAns=-1,this.questOK.button.on("click",(t=>{const e=this.selectedAns==this.questData.ans;this.showAnswerFeedback(e),e?setTimeout((()=>{this.handleCorrectAnswer()}),1e3):setTimeout((()=>{this.hideAnswerFeedback()}),500)})),this.checkBox.forEach(((t,e)=>{t.button.on("click",(t=>{this.checkBoxOn.forEach(((t,s)=>{t.enabled=s===e})),this.selectedAns=e}))})),this.foregroundYes.enabled=!1,this.foregroundNo.enabled=!1},QuestUi.prototype.showStage=function(t){this.app.fire(EventNames.QUEST_BG_REQUEST,t,(t=>{this.background.element.textureAsset=t}));const e=3*t+Math.floor(3*Math.random());console.log("******************* 現在的題目ID : "+e),console.log("*******************"),console.log("*******************"),console.log("*******************"),this.app.fire(EventNames.QUEST_REQUEST,e,(t=>{this.questData=t,this.questText.script.dynamicFontLoader.loadFontAndSetText(t.q),this.questAns[0].script.dynamicFontLoader.loadFontAndSetText(t.a0),this.questAns[1].script.dynamicFontLoader.loadFontAndSetText(t.a1),this.questAns[2].script.dynamicFontLoader.loadFontAndSetText(t.a2)})),this.hideAnswerFeedback(),this.checkBoxOn.forEach(((t,e)=>{t.enabled=!1})),this.selectedAns=-1},QuestUi.prototype.showAnswerFeedback=function(t){this.foregroundYes.enabled=t,this.foregroundNo.enabled=!t},QuestUi.prototype.hideAnswerFeedback=function(){this.foregroundYes.enabled=!1,this.foregroundNo.enabled=!1},QuestUi.prototype.handleCorrectAnswer=function(){const t=(SceneManager.instance.currentStage+1)%4;0==t?SceneManager.instance.showPage(2):(SceneManager.instance.currentStage=t,this.showStage(t))},QuestUi.prototype.update=function(t){};var FontLoaderExample=pc.createScript("fontLoaderExample");FontLoaderExample.attributes.add("targetTextEntity",{type:"entity",title:"目標文字實體"}),FontLoaderExample.attributes.add("testText",{type:"string",default:"Hello World!",title:"測試文字"}),FontLoaderExample.attributes.add("testFont",{type:"string",default:"Roboto",title:"測試字體"}),FontLoaderExample.prototype.initialize=function(){console.log("🔧 FontLoaderExample.initialize() 開始執行"),this.app.keyboard.on("keydown",this.onKeyDown,this),this.targetTextEntity&&(this.targetTextEntity.on("fontLoaded",this.onFontLoaded,this),this.targetTextEntity.on("fontLoadError",this.onFontLoadError,this),this.targetTextEntity.on("textUpdated",this.onTextUpdated,this),this.targetTextEntity.on("fontPreloaded",this.onFontPreloaded,this),this.targetTextEntity.on("fontPreloadError",this.onFontPreloadError,this),this.targetTextEntity.on("fontsPreloaded",this.onFontsPreloaded,this)),console.log("✅ FontLoaderExample 初始化完成"),console.log("📋 使用說明:"),console.log("  - 按 1: 載入測試文字和字體"),console.log("  - 按 2: 只更新文字內容"),console.log("  - 按 3: 只載入字體"),console.log("  - 按 4: 更新字體設定"),console.log("  - 按 5: 載入中文文字"),console.log("  - 按 6: 載入日文文字"),console.log("  - 按 7: 預載入常用字元"),console.log("  - 按 8: 預載入中文字元"),console.log("  - 按 9: 預載入日文字元"),console.log("  - 按 0: 批量預載入多個字體")},FontLoaderExample.prototype.onKeyDown=function(o){if(!this.targetTextEntity)return void console.warn("⚠️ 未設置目標文字實體");const t=this.targetTextEntity.script.dynamicFontLoader;if(t)switch(o.key){case pc.KEY_1:console.log("🎯 1 按下: 載入測試文字和字體"),t.loadFontAndSetText(this.testText,this.testFont,"");break;case pc.KEY_2:console.log("🎯 2 按下: 只更新文字內容"),t.setText("文字已更新! "+(new Date).toLocaleTimeString());break;case pc.KEY_3:console.log("🎯 3 按下: 只載入字體"),t.loadFont("Open Sans","");break;case pc.KEY_4:console.log("🎯 4 按下: 更新字體設定"),t.updateFontSettings("Lato","700");break;case pc.KEY_5:console.log("🎯 5 按下: 載入中文文字"),t.loadFontAndSetText("你好世界！歡迎使用動態字體載入器。","Noto Sans TC","");break;case pc.KEY_6:console.log("🎯 6 按下: 載入日文文字"),t.loadFontAndSetText("こんにちは世界！動的フォントローダーへようこそ。","Noto Sans JP","");break;case pc.KEY_7:console.log("🎯 7 按下: 預載入常用字元"),t.preloadCommonCharacters("Roboto","");break;case pc.KEY_8:console.log("🎯 8 按下: 預載入中文字元"),t.preloadChineseCharacters();break;case pc.KEY_9:console.log("🎯 9 按下: 預載入日文字元"),t.preloadJapaneseCharacters();break;case pc.KEY_0:console.log("🎯 0 按下: 批量預載入多個字體");const o=[{characters:"0123456789",fontName:"Roboto",fontBold:""},{characters:"ABCDEFGHIJKLMNOPQRSTUVWXYZ",fontName:"Open Sans",fontBold:"700"},{characters:"你好世界",fontName:"Noto Sans TC",fontBold:""},{characters:"こんにちは",fontName:"Noto Sans JP",fontBold:""}];t.preloadMultipleFonts(o)}else console.warn("⚠️ 目標實體沒有 DynamicFontLoader 腳本")},FontLoaderExample.prototype.onFontLoaded=function(o){console.log("🎉 字體載入完成事件:"),console.log("  - 文字:",o.text),console.log("  - 字體名稱:",o.fontName),console.log("  - 字體粗細:",o.fontBold),console.log("  - CanvasFont:",o.canvasFont)},FontLoaderExample.prototype.onFontLoadError=function(o){console.error("❌ 字體載入錯誤事件:"),console.error("  - 文字:",o.text),console.error("  - 字體名稱:",o.fontName),console.error("  - 字體粗細:",o.fontBold),console.error("  - 錯誤:",o.error)},FontLoaderExample.prototype.onTextUpdated=function(o){console.log("📝 文字更新事件:"),console.log("  - 新文字:",o.text)},FontLoaderExample.prototype.onFontPreloaded=function(o){console.log("⏳ 字體預載入完成事件:"),console.log("  - 字元:",o.characters),console.log("  - 字體名稱:",o.fontName),console.log("  - 字體粗細:",o.fontBold),console.log("  - CanvasFont:",o.canvasFont)},FontLoaderExample.prototype.onFontPreloadError=function(o){console.error("❌ 字體預載入錯誤事件:"),console.error("  - 字元:",o.characters),console.error("  - 字體名稱:",o.fontName),console.error("  - 字體粗細:",o.fontBold),console.error("  - 錯誤:",o.error)},FontLoaderExample.prototype.onFontsPreloaded=function(o){console.log("✅ 批量字體預載入完成事件:"),console.log("  - 預載入數量:",o.count),console.log("  - 配置:",o.configs)},FontLoaderExample.prototype.loadTextWithFont=function(o,t,e){if(!this.targetTextEntity)return void console.warn("⚠️ 未設置目標文字實體");const n=this.targetTextEntity.script.dynamicFontLoader;if(n)return console.log("🚀 動態載入文字和字體:",o,t,e),n.loadFontAndSetText(o,t,e);console.warn("⚠️ 目標實體沒有 DynamicFontLoader 腳本")},FontLoaderExample.prototype.loadMultipleTexts=async function(o){console.log("🔄 批量載入多個文字實體");const t=o.map((o=>{const{entity:t,text:e,fontName:n,fontBold:a}=o,r=t.script.dynamicFontLoader;return r?r.loadFontAndSetText(e,n,a):(console.warn("⚠️ 實體沒有 DynamicFontLoader 腳本:",t.getGuid()),Promise.resolve())}));try{await Promise.all(t),console.log("✅ 批量載入完成")}catch(o){console.error("❌ 批量載入失敗:",o)}},FontLoaderExample.prototype.update=function(o){},FontLoaderExample.prototype.destroy=function(){console.log("🗑️ FontLoaderExample.destroy() 開始清理"),this.app.keyboard.off("keydown",this.onKeyDown,this),this.targetTextEntity&&(this.targetTextEntity.off("fontLoaded",this.onFontLoaded,this),this.targetTextEntity.off("fontLoadError",this.onFontLoadError,this),this.targetTextEntity.off("textUpdated",this.onTextUpdated,this),this.targetTextEntity.off("fontPreloaded",this.onFontPreloaded,this),this.targetTextEntity.off("fontPreloadError",this.onFontPreloadError,this),this.targetTextEntity.off("fontsPreloaded",this.onFontsPreloaded,this))};pc.script.createLoadingScreen((function(e){var t,a;t=["body {","    background-color: #283538;","}","","#application-splash-wrapper {","    position: absolute;","    top: 0;","    left: 0;","    height: 100%;","    width: 100%;","    background-color: #283538;","}","","#application-splash {","    position: absolute;","    top: calc(50% - 28px);","    width: 264px;","    left: calc(50% - 132px);","}","","#application-splash img {","    width: 100%;","}","","#progress-bar-container {","    margin: 20px auto 0 auto;","    height: 2px;","    width: 100%;","    background-color: #1d292c;","}","","#progress-bar {","    width: 0%;","    height: 100%;","    background-color: #f60;","}","","@media (max-width: 480px) {","    #application-splash {","        width: 170px;","        left: calc(50% - 85px);","    }","}"].join("\n"),(a=document.createElement("style")).type="text/css",a.styleSheet?a.styleSheet.cssText=t:a.appendChild(document.createTextNode(t)),document.head.appendChild(a),function(){var e=document.createElement("div");e.id="application-splash-wrapper",document.body.appendChild(e);var t=document.createElement("div");t.id="application-splash",e.appendChild(t),t.style.display="none";var a=document.createElement("div");a.textContent="讀取中",a.style.color="white",a.style.fontSize="24px",a.style.fontWeight="bold",a.style.textAlign="center",t.appendChild(a),t.style.display="block";var o=document.createElement("div");o.id="progress-bar-container",t.appendChild(o);var n=document.createElement("div");n.id="progress-bar",o.appendChild(n)}(),e.on("preload:end",(function(){e.off("preload:progress")})),e.on("preload:progress",(function(e){var t=document.getElementById("progress-bar");t&&(e=Math.min(1,Math.max(0,e)),t.style.width=100*e+"%")})),e.on("start",(function(){var e=document.getElementById("application-splash-wrapper");e.parentElement.removeChild(e)}))}));